{"version":3,"file":"split-grid.min.js","sources":["../../grid-template-utils/dist/grid-template-utils.es.js","../src/util.js","../src/getMatchedCSSRules.js","../src/index.js"],"sourcesContent":["var numeric = function (value, unit) { return Number(value.slice(0, -1 * unit.length)); };\n\nvar parseValue = function (value) {\n    if (value.endsWith('px'))\n        { return { value: value, type: 'px', numeric: numeric(value, 'px') } }\n    if (value.endsWith('fr'))\n        { return { value: value, type: 'fr', numeric: numeric(value, 'fr') } }\n    if (value.endsWith('%'))\n        { return { value: value, type: '%', numeric: numeric(value, '%') } }\n    if (value === 'auto') { return { value: value, type: 'auto' } }\n    return null\n};\n\nvar parse = function (rule) { return rule.split(' ').map(parseValue); };\n\nvar combine = function (rule, tracks) {\n    var prevTracks = rule ? rule.split(' ') : [];\n\n    tracks.forEach(function (track, i) {\n        if (i > prevTracks.length - 1) {\n            throw new Error(\n                (\"Unable to set size of track index \" + i + \", there are only \" + (prevTracks.length) + \" tracks in the grid layout.\")\n            )\n        }\n\n        prevTracks[i] = track.value\n            ? track.value\n            : (\"\" + (track.numeric) + (track.type));\n    });\n\n    return prevTracks.join(' ')\n};\n\nvar getSizeAtTrack = function (index, tracks, gap, end) {\n    if ( gap === void 0 ) gap = 0;\n    if ( end === void 0 ) end = false;\n\n    var newIndex = end ? index + 1 : index;\n    var trackSum = tracks\n        .slice(0, newIndex)\n        .reduce(function (accum, value) { return accum + value.numeric; }, 0);\n    var gapSum = gap ? index * gap : 0;\n\n    return trackSum + gapSum\n};\n\nexport { parse, combine, getSizeAtTrack };\n","export const getStyles = (rule, ownRules, matchedRules) =>\n    [...ownRules, ...matchedRules]\n        .map(r => r.style[rule])\n        .filter(style => style !== undefined && style !== '')\n\nexport const getGapValue = (unit, size) => {\n    if (size.endsWith(unit)) {\n        return Number(size.slice(0, -1 * unit.length))\n    }\n    return null\n}\n\nexport const firstNonZero = tracks => {\n    // eslint-disable-next-line no-plusplus\n    for (let i = 0; i < tracks.length; i++) {\n        if (tracks[i].numeric > 0) {\n            return i\n        }\n    }\n    return null\n}\n","export default el =>\n    []\n        .concat(\n            ...Array.from(el.ownerDocument.styleSheets).map(s => {\n                let rules = []\n\n                try {\n                    rules = Array.from(s.cssRules || [])\n                } catch (e) {\n                    // Ignore results on security error\n                }\n\n                return rules\n            }),\n        )\n        .filter(r => {\n            let matches = false\n            try {\n                matches = el.matches(r.selectorText)\n            } catch (e) {\n                // Ignore matching erros\n            }\n\n            return matches\n        })\n","import { parse, getSizeAtTrack } from 'grid-template-utils'\nimport { getStyles, getGapValue, firstNonZero } from './util'\nimport getMatchedCSSRules from './getMatchedCSSRules'\n\nconst gridTemplatePropColumns = 'grid-template-columns'\nconst gridTemplatePropRows = 'grid-template-rows'\n\nconst NOOP = () => false\n\nconst defaultWriteStyle = (element, gridTemplateProp, style) => {\n    // eslint-disable-next-line no-param-reassign\n    element.style[gridTemplateProp] = style\n}\n\nconst getOption = (options, propName, def) => {\n    const value = options[propName]\n    if (value !== undefined) {\n        return value\n    }\n    return def\n}\n\nclass Gutter {\n    constructor(direction, options, parentOptions) {\n        this.direction = direction\n        this.element = options.element\n        this.track = options.track\n        this.trackTypes = {}\n\n        if (direction === 'column') {\n            this.gridTemplateProp = gridTemplatePropColumns\n            this.gridGapProp = 'grid-column-gap'\n            this.cursor = getOption(\n                parentOptions,\n                'columnCursor',\n                getOption(parentOptions, 'cursor', 'col-resize'),\n            )\n            this.snapOffset = getOption(\n                parentOptions,\n                'columnSnapOffset',\n                getOption(parentOptions, 'snapOffset', 30),\n            )\n            this.dragInterval = getOption(\n                parentOptions,\n                'columnDragInterval',\n                getOption(parentOptions, 'dragInterval', 1),\n            )\n            this.clientAxis = 'clientX'\n            this.optionStyle = getOption(parentOptions, 'gridTemplateColumns')\n        } else if (direction === 'row') {\n            this.gridTemplateProp = gridTemplatePropRows\n            this.gridGapProp = 'grid-row-gap'\n            this.cursor = getOption(\n                parentOptions,\n                'rowCursor',\n                getOption(parentOptions, 'cursor', 'row-resize'),\n            )\n            this.snapOffset = getOption(\n                parentOptions,\n                'rowSnapOffset',\n                getOption(parentOptions, 'snapOffset', 30),\n            )\n            this.dragInterval = getOption(\n                parentOptions,\n                'rowDragInterval',\n                getOption(parentOptions, 'dragInterval', 1),\n            )\n            this.clientAxis = 'clientY'\n            this.optionStyle = getOption(parentOptions, 'gridTemplateRows')\n        }\n\n        this.onDragStart = getOption(parentOptions, 'onDragStart', NOOP)\n        this.onDragEnd = getOption(parentOptions, 'onDragEnd', NOOP)\n        this.onDrag = getOption(parentOptions, 'onDrag', NOOP)\n        this.writeStyle = getOption(\n            parentOptions,\n            'writeStyle',\n            defaultWriteStyle,\n        )\n\n        this.startDragging = this.startDragging.bind(this)\n        this.stopDragging = this.stopDragging.bind(this)\n        this.drag = this.drag.bind(this)\n\n        this.minSizeStart = options.minSizeStart\n        this.minSizeEnd = options.minSizeEnd\n\n        if (options.element) {\n            this.element.addEventListener('mousedown', this.startDragging)\n            this.element.addEventListener('touchstart', this.startDragging)\n        }\n    }\n\n    getDimensions() {\n        const {\n            width,\n            height,\n            top,\n            bottom,\n            left,\n            right,\n        } = this.grid.getBoundingClientRect()\n\n        if (this.direction === 'column') {\n            this.start = top\n            this.end = bottom\n            this.size = height\n        } else if (this.direction === 'row') {\n            this.start = left\n            this.end = right\n            this.size = width\n        }\n    }\n\n    getSizeAtTrack(track, end) {\n        return getSizeAtTrack(\n            track,\n            this.computedPixels,\n            this.computedGapPixels,\n            end,\n        )\n    }\n\n    getSizeOfTrack(track) {\n        return this.computedPixels[track].numeric\n    }\n\n    getRawTracks() {\n        const tracks = getStyles(\n            this.gridTemplateProp,\n            [this.grid],\n            getMatchedCSSRules(this.grid),\n        )\n        if (!tracks.length) {\n            if (this.optionStyle) return this.optionStyle\n\n            throw Error('Unable to determine grid template tracks from styles.')\n        }\n        return tracks[0]\n    }\n\n    getGap() {\n        const gap = getStyles(\n            this.gridGapProp,\n            [this.grid],\n            getMatchedCSSRules(this.grid),\n        )\n        if (!gap.length) {\n            return null\n        }\n        return gap[0]\n    }\n\n    getRawComputedTracks() {\n        return window.getComputedStyle(this.grid)[this.gridTemplateProp]\n    }\n\n    getRawComputedGap() {\n        return window.getComputedStyle(this.grid)[this.gridGapProp]\n    }\n\n    setTracks(raw) {\n        this.tracks = raw.split(' ')\n        this.trackValues = parse(raw)\n    }\n\n    setComputedTracks(raw) {\n        this.computedTracks = raw.split(' ')\n        this.computedPixels = parse(raw)\n    }\n\n    setGap(raw) {\n        this.gap = raw\n    }\n\n    setComputedGap(raw) {\n        this.computedGap = raw\n        this.computedGapPixels = getGapValue('px', this.computedGap) || 0\n    }\n\n    getMousePosition(e) {\n        if ('touches' in e) return e.touches[0][this.clientAxis]\n        return e[this.clientAxis]\n    }\n\n    startDragging(e) {\n        if ('button' in e && e.button !== 0) {\n            return\n        }\n\n        // Don't actually drag the element. We emulate that in the drag function.\n        e.preventDefault()\n\n        if (this.element) {\n            this.grid = this.element.parentNode\n        } else {\n            this.grid = e.target.parentNode\n        }\n\n        this.getDimensions()\n        this.setTracks(this.getRawTracks())\n        this.setComputedTracks(this.getRawComputedTracks())\n        this.setGap(this.getGap())\n        this.setComputedGap(this.getRawComputedGap())\n\n        const trackPercentage = this.trackValues.filter(\n            track => track.type === '%',\n        )\n        const trackFr = this.trackValues.filter(track => track.type === 'fr')\n\n        this.totalFrs = trackFr.length\n\n        if (this.totalFrs) {\n            const track = firstNonZero(trackFr)\n\n            if (track !== null) {\n                this.frToPixels =\n                    this.computedPixels[track].numeric / trackFr[track].numeric\n            }\n        }\n\n        if (trackPercentage.length) {\n            const track = firstNonZero(trackPercentage)\n\n            if (track !== null) {\n                this.percentageToPixels =\n                    this.computedPixels[track].numeric /\n                    trackPercentage[track].numeric\n            }\n        }\n\n        // get start of gutter track\n        const gutterStart = this.getSizeAtTrack(this.track, false) + this.start\n        this.dragStartOffset = this.getMousePosition(e) - gutterStart\n\n        this.aTrack = this.track - 1\n\n        if (this.track < this.tracks.length - 1) {\n            this.bTrack = this.track + 1\n        } else {\n            throw Error(\n                `Invalid track index: ${\n                    this.track\n                }. Track must be between two other tracks and only ${\n                    this.tracks.length\n                } tracks were found.`,\n            )\n        }\n\n        this.aTrackStart = this.getSizeAtTrack(this.aTrack, false) + this.start\n        this.bTrackEnd = this.getSizeAtTrack(this.bTrack, true) + this.start\n\n        // Set the dragging property of the pair object.\n        this.dragging = true\n\n        // All the binding. `window` gets the stop events in case we drag out of the elements.\n        window.addEventListener('mouseup', this.stopDragging)\n        window.addEventListener('touchend', this.stopDragging)\n        window.addEventListener('touchcancel', this.stopDragging)\n        window.addEventListener('mousemove', this.drag)\n        window.addEventListener('touchmove', this.drag)\n\n        // Disable selection. Disable!\n        this.grid.addEventListener('selectstart', NOOP)\n        this.grid.addEventListener('dragstart', NOOP)\n\n        this.grid.style.userSelect = 'none'\n        this.grid.style.webkitUserSelect = 'none'\n        this.grid.style.MozUserSelect = 'none'\n        this.grid.style.pointerEvents = 'none'\n\n        // Set the cursor at multiple levels\n        this.grid.style.cursor = this.cursor\n        window.document.body.style.cursor = this.cursor\n\n        this.onDragStart(this.direction, this.track)\n    }\n\n    stopDragging() {\n        this.dragging = false\n\n        // Remove the stored event listeners. This is why we store them.\n        this.cleanup()\n\n        this.onDragEnd(this.direction, this.track)\n\n        if (this.needsDestroy) {\n            if (this.element) {\n                this.element.removeEventListener(\n                    'mousedown',\n                    this.startDragging,\n                )\n                this.element.removeEventListener(\n                    'touchstart',\n                    this.startDragging,\n                )\n            }\n            this.destroyCb()\n            this.needsDestroy = false\n            this.destroyCb = null\n        }\n    }\n\n    drag(e) {\n        let mousePosition = this.getMousePosition(e)\n\n        const gutterSize = this.getSizeOfTrack(this.track)\n        const minMousePosition =\n            this.aTrackStart +\n            this.minSizeStart +\n            this.dragStartOffset +\n            this.computedGapPixels\n        const maxMousePosition =\n            this.bTrackEnd -\n            this.minSizeEnd -\n            this.computedGapPixels -\n            (gutterSize - this.dragStartOffset)\n        const minMousePositionOffset = minMousePosition + this.snapOffset\n        const maxMousePositionOffset = maxMousePosition - this.snapOffset\n\n        if (mousePosition < minMousePositionOffset) {\n            mousePosition = minMousePosition\n        }\n\n        if (mousePosition > maxMousePositionOffset) {\n            mousePosition = maxMousePosition\n        }\n\n        if (mousePosition < minMousePosition) {\n            mousePosition = minMousePosition\n        } else if (mousePosition > maxMousePosition) {\n            mousePosition = maxMousePosition\n        }\n\n        let aTrackSize =\n            mousePosition -\n            this.aTrackStart -\n            this.dragStartOffset -\n            this.computedGapPixels\n        let bTrackSize =\n            this.bTrackEnd -\n            mousePosition +\n            this.dragStartOffset -\n            gutterSize -\n            this.computedGapPixels\n\n        if (this.dragInterval > 1) {\n            const aTrackSizeIntervaled =\n                Math.round(aTrackSize / this.dragInterval) * this.dragInterval\n            bTrackSize -= aTrackSizeIntervaled - aTrackSize\n            aTrackSize = aTrackSizeIntervaled\n        }\n\n        if (aTrackSize < this.minSizeStart) {\n            aTrackSize = this.minSizeStart\n        }\n\n        if (bTrackSize < this.minSizeEnd) {\n            bTrackSize = this.minSizeEnd\n        }\n\n        if (this.trackValues[this.aTrack].type === 'px') {\n            this.tracks[this.aTrack] = `${aTrackSize}px`\n        } else if (this.trackValues[this.aTrack].type === 'fr') {\n            if (this.totalFrs === 1) {\n                this.tracks[this.aTrack] = '1fr'\n            } else {\n                const targetFr = aTrackSize / this.frToPixels\n                this.tracks[this.aTrack] = `${targetFr}fr`\n            }\n        } else if (this.trackValues[this.aTrack].type === '%') {\n            const targetPercentage = aTrackSize / this.percentageToPixels\n            this.tracks[this.aTrack] = `${targetPercentage}%`\n        }\n\n        if (this.trackValues[this.bTrack].type === 'px') {\n            this.tracks[this.bTrack] = `${bTrackSize}px`\n        } else if (this.trackValues[this.bTrack].type === 'fr') {\n            if (this.totalFrs === 1) {\n                this.tracks[this.bTrack] = '1fr'\n            } else {\n                const targetFr = bTrackSize / this.frToPixels\n                this.tracks[this.bTrack] = `${targetFr}fr`\n            }\n        } else if (this.trackValues[this.bTrack].type === '%') {\n            const targetPercentage = bTrackSize / this.percentageToPixels\n            this.tracks[this.bTrack] = `${targetPercentage}%`\n        }\n\n        const style = this.tracks.join(' ')\n        this.writeStyle(this.grid, this.gridTemplateProp, style)\n        this.onDrag(this.direction, this.track, style)\n    }\n\n    cleanup() {\n        window.removeEventListener('mouseup', this.stopDragging)\n        window.removeEventListener('touchend', this.stopDragging)\n        window.removeEventListener('touchcancel', this.stopDragging)\n        window.removeEventListener('mousemove', this.drag)\n        window.removeEventListener('touchmove', this.drag)\n\n        if (this.grid) {\n            this.grid.removeEventListener('selectstart', NOOP)\n            this.grid.removeEventListener('dragstart', NOOP)\n\n            this.grid.style.userSelect = ''\n            this.grid.style.webkitUserSelect = ''\n            this.grid.style.MozUserSelect = ''\n            this.grid.style.pointerEvents = ''\n\n            this.grid.style.cursor = ''\n        }\n\n        window.document.body.style.cursor = ''\n    }\n\n    destroy(immediate = true, cb) {\n        if (immediate || this.dragging === false) {\n            this.cleanup()\n            if (this.element) {\n                this.element.removeEventListener(\n                    'mousedown',\n                    this.startDragging,\n                )\n                this.element.removeEventListener(\n                    'touchstart',\n                    this.startDragging,\n                )\n            }\n\n            if (cb) {\n                cb()\n            }\n        } else {\n            this.needsDestroy = true\n            if (cb) {\n                this.destroyCb = cb\n            }\n        }\n    }\n}\n\nconst getTrackOption = (options, track, defaultValue) => {\n    if (track in options) {\n        return options[track]\n    }\n\n    return defaultValue\n}\n\nconst createGutter = (direction, options) => gutterOptions => {\n    if (gutterOptions.track < 1) {\n        throw Error(\n            `Invalid track index: ${\n                gutterOptions.track\n            }. Track must be between two other tracks.`,\n        )\n    }\n\n    const trackMinSizes =\n        direction === 'column'\n            ? options.columnMinSizes || {}\n            : options.rowMinSizes || {}\n    const trackMinSize = direction === 'column' ? 'columnMinSize' : 'rowMinSize'\n\n    return new Gutter(\n        direction,\n        {\n            minSizeStart: getTrackOption(\n                trackMinSizes,\n                gutterOptions.track - 1,\n                getOption(\n                    options,\n                    trackMinSize,\n                    getOption(options, 'minSize', 0),\n                ),\n            ),\n            minSizeEnd: getTrackOption(\n                trackMinSizes,\n                gutterOptions.track + 1,\n                getOption(\n                    options,\n                    trackMinSize,\n                    getOption(options, 'minSize', 0),\n                ),\n            ),\n            ...gutterOptions,\n        },\n        options,\n    )\n}\n\nclass Grid {\n    constructor(options) {\n        this.columnGutters = {}\n        this.rowGutters = {}\n\n        this.options = {\n            columnGutters: options.columnGutters || [],\n            rowGutters: options.rowGutters || [],\n            columnMinSizes: options.columnMinSizes || {},\n            rowMinSizes: options.rowMinSizes || {},\n            ...options,\n        }\n\n        this.options.columnGutters.forEach(gutterOptions => {\n            this.columnGutters[options.track] = createGutter(\n                'column',\n                this.options,\n            )(gutterOptions)\n        })\n\n        this.options.rowGutters.forEach(gutterOptions => {\n            this.rowGutters[options.track] = createGutter('row', this.options)(\n                gutterOptions,\n            )\n        })\n    }\n\n    addColumnGutter(element, track) {\n        if (this.columnGutters[track]) {\n            this.columnGutters[track].destroy()\n        }\n\n        this.columnGutters[track] = createGutter('column', this.options)({\n            element,\n            track,\n        })\n    }\n\n    addRowGutter(element, track) {\n        if (this.rowGutters[track]) {\n            this.rowGutters[track].destroy()\n        }\n\n        this.rowGutters[track] = createGutter('row', this.options)({\n            element,\n            track,\n        })\n    }\n\n    removeColumnGutter(track, immediate = true) {\n        if (this.columnGutters[track]) {\n            this.columnGutters[track].destroy(immediate, () => {\n                delete this.columnGutters[track]\n            })\n        }\n    }\n\n    removeRowGutter(track, immediate = true) {\n        if (this.rowGutters[track]) {\n            this.rowGutters[track].destroy(immediate, () => {\n                delete this.rowGutters[track]\n            })\n        }\n    }\n\n    handleDragStart(e, direction, track) {\n        if (direction === 'column') {\n            if (this.columnGutters[track]) {\n                this.columnGutters[track].destroy()\n            }\n\n            this.columnGutters[track] = createGutter('column', this.options)({\n                track,\n            })\n            this.columnGutters[track].startDragging(e)\n        } else if (direction === 'row') {\n            if (this.rowGutters[track]) {\n                this.rowGutters[track].destroy()\n            }\n\n            this.rowGutters[track] = createGutter('row', this.options)({\n                track,\n            })\n            this.rowGutters[track].startDragging(e)\n        }\n    }\n\n    destroy(immediate = true) {\n        Object.keys(this.columnGutters).forEach(track =>\n            this.columnGutters[track].destroy(immediate, () => {\n                delete this.columnGutters[track]\n            }),\n        )\n        Object.keys(this.rowGutters).forEach(track =>\n            this.rowGutters[track].destroy(immediate, () => {\n                delete this.rowGutters[track]\n            }),\n        )\n    }\n}\n\nexport default options => new Grid(options)\n"],"names":["numeric","value","unit","Number","slice","length","parseValue","endsWith","type","parse","rule","split","map","getStyles","ownRules","matchedRules","r","style","filter","undefined","firstNonZero","tracks","let","i","el","concat","ref","Array","from","ownerDocument","styleSheets","s","rules","cssRules","e","matches","selectorText","const","NOOP","defaultWriteStyle","element","gridTemplateProp","getOption","options","propName","def","Gutter","direction","parentOptions","this","track","trackTypes","gridGapProp","cursor","snapOffset","dragInterval","clientAxis","optionStyle","onDragStart","onDragEnd","onDrag","writeStyle","startDragging","bind","stopDragging","drag","minSizeStart","minSizeEnd","addEventListener","getDimensions","grid","getBoundingClientRect","start","top","end","bottom","size","height","left","right","width","getSizeAtTrack","index","gap","newIndex","reduce","accum","computedPixels","computedGapPixels","getSizeOfTrack","getRawTracks","getMatchedCSSRules","Error","getGap","getRawComputedTracks","window","getComputedStyle","getRawComputedGap","setTracks","raw","trackValues","setComputedTracks","computedTracks","setGap","setComputedGap","computedGap","getMousePosition","touches","button","preventDefault","parentNode","target","trackPercentage","trackFr","totalFrs","frToPixels","percentageToPixels","gutterStart","dragStartOffset","aTrack","bTrack","aTrackStart","bTrackEnd","dragging","userSelect","webkitUserSelect","MozUserSelect","pointerEvents","document","body","cleanup","needsDestroy","removeEventListener","destroyCb","mousePosition","gutterSize","minMousePosition","maxMousePosition","aTrackSize","bTrackSize","aTrackSizeIntervaled","Math","round","targetFr","targetPercentage","targetFr$1","targetPercentage$1","join","destroy","immediate","cb","getTrackOption","defaultValue","createGutter","gutterOptions","trackMinSizes","columnMinSizes","rowMinSizes","trackMinSize","Object","Grid","columnGutters","rowGutters","forEach","this$1","addColumnGutter","addRowGutter","removeColumnGutter","removeRowGutter","handleDragStart","keys"],"mappings":"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"}